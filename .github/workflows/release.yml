name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  build-and-attach:
    name: Build client and attach assets
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.tag_name }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build client
        run: npm run build

      - name: Build server entries
        run: npm run build:server

      - name: Create client-public.zip
        run: |
          cd client/public
          zip -r ../../client-public.zip .
          cd -

      - name: Attach assets to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          files: |
            client-public.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    name: Publish to npm
    needs: [release-please, build-and-attach]
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.tag_name }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org/'
          always-auth: true

      - name: Verify npm token
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "${NODE_AUTH_TOKEN}" ]; then
            echo "NPM_TOKEN is not set (add repo secret NPM_TOKEN)" && exit 1
          fi
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          npm whoami

      - name: Install dependencies
        run: npm ci --ignore-scripts=false

      - name: Build client
        run: npm run build

      - name: Build server entries
        run: npm run build:server

      - name: Determine npm tag
        id: npm-tag
        run: |
          # Extract version from package.json
          VERSION=$(node -p "require('./package.json').version")
          echo "Version: $VERSION"
          
          # Check if it's a prerelease version (contains alpha, beta, rc, etc.)
          if [[ "$VERSION" =~ (alpha|beta|rc|pre) ]]; then
            echo "NPM_TAG=alpha" >> $GITHUB_OUTPUT
            echo "Publishing as alpha tag"
          else
            echo "NPM_TAG=latest" >> $GITHUB_OUTPUT
            echo "Publishing as latest tag"
          fi

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --tag ${{ steps.npm-tag.outputs.NPM_TAG }}
