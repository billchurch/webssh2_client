name: Publish (on release or manual)

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git tag to publish (e.g., v1.0.0-alpha.0)'
        required: true

permissions:
  id-token: write  # Required for OIDC
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || inputs.tag }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org/'
          always-auth: true

      - name: Verify npm token
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "${NODE_AUTH_TOKEN}" ]; then
            echo "NPM_TOKEN is not set (add repo secret NPM_TOKEN)" && exit 1
          fi
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          npm whoami

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm ci --ignore-scripts=false

      - name: Build client
        run: npm run build

      - name: Build server entries
        run: npm run build:server

      - name: Determine npm tag
        id: npm-tag
        run: |
          # Extract version from package.json
          VERSION=$(node -p "require('./package.json').version")
          echo "Version: $VERSION"
          
          # Check if it's a prerelease version (contains alpha, beta, rc, etc.)
          if [[ "$VERSION" =~ (alpha|beta|rc|pre) ]]; then
            echo "NPM_TAG=alpha" >> $GITHUB_OUTPUT
            echo "Publishing as alpha tag"
          else
            echo "NPM_TAG=latest" >> $GITHUB_OUTPUT
            echo "Publishing as latest tag"
          fi

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --tag ${{ steps.npm-tag.outputs.NPM_TAG }}
